<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Urvah Shabbir</title><link>https://urwa.github.io/</link><description>Recent content on Urvah Shabbir</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 27 Jan 2023 12:59:12 +0500</lastBuildDate><atom:link href="https://urwa.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Cloud Functions Python Packages Artifact Repo</title><link>https://urwa.github.io/posts/gcp-cloud-functions-python-packages-artifact-repo/</link><pubDate>Fri, 27 Jan 2023 12:59:12 +0500</pubDate><guid>https://urwa.github.io/posts/gcp-cloud-functions-python-packages-artifact-repo/</guid><description>The background you might want to skip reading I had multiple api sources which had some what the same response format and given the architecture in GCP, I had a number of similar python functions that were duplicated across multiple cloud functions. We all know what a mess that is.
Did the research, came across two ways to solve this
A monolithic repo with common code in a separate folder and one folder per cloud function.</description></item><item><title>Terraform, Google Service Accounts and how to deploy Cloud Functions using Cloud Build</title><link>https://urwa.github.io/posts/gcp-terraform/</link><pubDate>Sun, 26 Jun 2022 09:43:10 +0500</pubDate><guid>https://urwa.github.io/posts/gcp-terraform/</guid><description>The background you might want to skip reading I did not go with the usual path of deploying cloud functions using terraform by zipping source code, uploading code to google cloud storage and then creating/deploying cloud functions. Not to forget the service accounts and permissions that have to be set.
Why?
Here are my reasons:
Terraform still does not provide an inbuilt feature to check if there is a change in codebase.</description></item></channel></rss>